{"version":3,"file":"preview-9a27e6d0.js","sources":["../../src/utils/colorUtils.ts","../../src/theming/theme.ts","../../src/core/ParticleProvider.tsx","../../.storybook/preview.tsx"],"sourcesContent":["export const contrastThreshold = 4.5;\n\nfunction hexToRgb(hex: string) {\n  var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n\nfunction luminance(r: number, g: number, b: number) {\n  var a = [r, g, b].map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\n\nexport function getContrastRatio(foreground: string, background: string) {\n  const color1rgb = hexToRgb(foreground);\n  const color2rgb = hexToRgb(background);\n\n  if (!color1rgb || !color2rgb) {\n    return 0;\n  }\n\n  const color1luminance = luminance(color1rgb.r, color1rgb.g, color1rgb.b);\n  const color2luminance = luminance(color2rgb.r, color2rgb.g, color2rgb.b);\n\n  return (\n    (Math.max(color1luminance, color2luminance) + 0.05) /\n    (Math.min(color1luminance, color2luminance) + 0.05)\n  );\n}\n\nexport function getContrastText(background: string) {\n  const contrast = getContrastRatio('#ffffff', background);\n\n  const contrastText = contrast >= contrastThreshold ? '#ffffff' : '#000000';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (contrast < 3) {\n      console.error(\n        [\n          `MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`,\n          'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n          'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast',\n        ].join('\\n'),\n      );\n    }\n  }\n\n  return contrastText;\n}\n","import { ParticleTheme } from '../core/theme.types';\nimport { getContrastText } from '../utils/colorUtils';\n\nexport const defaultTheme: ParticleTheme = {\n  colors: {\n    primary: '#7b2ff7',\n    secondary: '#f107a3',\n    error: '#d32f2f',\n    warning: '#ed6c02',\n    info: '#0288d1',\n    success: '#2e7d32',\n  },\n  getContrastText,\n};\n","import { ThemeProvider } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { defaultTheme } from '../theming/theme';\nimport React from 'react';\nimport { ParticleColorTheme } from './theme.types';\n\nexport type ParticleProviderProps = {\n  children: React.ReactNode;\n  theme?: ParticleColorTheme;\n};\nexport default function ParticleProvider({\n  children,\n  theme,\n}: ParticleProviderProps) {\n  const [currentTheme, setCurrentTheme] = useState(defaultTheme);\n\n  useEffect(() => {\n    if (theme) {\n      setCurrentTheme({ ...defaultTheme, ...theme });\n    }\n  }, [theme]);\n\n  return <ThemeProvider theme={currentTheme}>{children}</ThemeProvider>;\n}\n","import React from 'react';\nimport { Preview } from '@storybook/react';\nimport ParticleProvider from '../src/core/ParticleProvider';\nimport './style.css';\n\n// export const decorators = [\n//   withThemeFromJSXProvider({\n//     themes: {\n//       light: defaultTheme,\n//     },\n//     defaultTheme: 'light',\n//     Provider: ThemeProvider,\n//   }),\n// ];\n\nconst preview: Preview = {\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n  decorators: [\n    (Story) => (\n      <ParticleProvider>\n        {/* ðŸ‘‡ Decorators in Storybook also accept a function. Replace <Story/> with Story() to enable it  */}\n        <Story />\n      </ParticleProvider>\n    ),\n  ],\n};\n\nexport default preview;\n"],"names":["contrastThreshold","hexToRgb","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","luminance","a","map","v","Math","pow","getContrastRatio","foreground","background","color1rgb","color2rgb","color1luminance","color2luminance","max","min","getContrastText","contrastText","defaultTheme","colors","primary","secondary","error","warning","info","success","ParticleProvider","children","currentTheme","setCurrentTheme","useState","useEffect","theme","jsx","ThemeProvider","preview","parameters","actions","argTypesRegex","controls","matchers","color","date","decorators","Story"],"mappings":"8NAAO,MAAMA,EAAoB,IAEjC,SAASC,EAASC,EAAa,CAC7B,IAAIC,EAAiB,mCACrBD,EAAMA,EAAIE,QAAQD,EAAgB,SAAUE,EAAGC,EAAGC,EAAGC,EAAG,CACtD,OAAOF,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,CAAAA,CAC5B,EAEGC,IAAAA,EAAS,4CAA4CC,KAAKR,CAAG,EACjE,OAAOO,EACH,CACEH,EAAGK,SAASF,EAAO,CAAC,EAAG,EAAE,EACzBF,EAAGI,SAASF,EAAO,CAAC,EAAG,EAAE,EACzBD,EAAGG,SAASF,EAAO,CAAC,EAAG,EAAE,CAE3B,EAAA,IACN,CAEA,SAASG,EAAUN,EAAWC,EAAWC,EAAW,CAC9CK,IAAAA,EAAI,CAACP,EAAGC,EAAGC,CAAC,EAAEM,IAAI,SAAUC,EAAG,CAC5B,OAAAA,GAAA,IACEA,GAAK,OAAUA,EAAI,MAAQC,KAAKC,KAAKF,EAAI,MAAS,MAAO,GAAG,CAAA,CACpE,EACMF,OAAAA,EAAE,CAAC,EAAI,MAASA,EAAE,CAAC,EAAI,MAASA,EAAE,CAAC,EAAI,KAChD,CAEgBK,SAAAA,EAAiBC,EAAoBC,EAAoB,CACjEC,MAAAA,EAAYpB,EAASkB,CAAU,EAC/BG,EAAYrB,EAASmB,CAAU,EAEjC,GAAA,CAACC,GAAa,CAACC,EACV,MAAA,GAGT,MAAMC,EAAkBX,EAAUS,EAAUf,EAAGe,EAAUd,EAAGc,EAAUb,CAAC,EACjEgB,EAAkBZ,EAAUU,EAAUhB,EAAGgB,EAAUf,EAAGe,EAAUd,CAAC,EAGpEQ,OAAAA,KAAKS,IAAIF,EAAiBC,CAAe,EAAI,MAC7CR,KAAKU,IAAIH,EAAiBC,CAAe,EAAI,IAElD,CAEO,SAASG,EAAgBP,EAAoB,CAiB3CQ,OAhBUV,EAAiB,UAAWE,CAAU,GAEtBpB,EAAoB,UAAY,SAenE,CC1DO,MAAM6B,EAA8B,CACzCC,OAAQ,CACNC,QAAS,UACTC,UAAW,UACXC,MAAO,UACPC,QAAS,UACTC,KAAM,UACNC,QAAS,SACX,EACAT,gBAAAA,CACF,ECHA,SAAAU,EAAA,CAAyC,SAAAC,EACvCA,MAAAA,CAEqB,EAAA,CACrB,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAAZ,CAAA,EAEAa,OAAAA,EAAAA,UAAAA,IAAAA,CACEC,GACEH,EAAAA,CAAgB,GAAAX,EAAKA,GAAAA,CAAiBc,CAAAA,CACxC,EAAA,CAAAA,CAAA,CAAA,EAGFC,EAAAC,EAAA,CAAA,MAAAN,EAAA,SAAAD,CAAA,CAAA,CACF,uNCRA,MAAMQ,EAAmB,CACvBC,WAAY,CACVC,QAAS,CAAEC,cAAe,YAAa,EACvCC,SAAU,CACRC,SAAU,CACRC,MAAO,uBACPC,KAAM,OACR,CACF,CACF,EACAC,WAAY,CAERC,GAAAX,EAACP,GAEC,SAACO,EAAAW,EAAA,CAAK,CAAA,CACR,CAAA,CACD,CAEL"}