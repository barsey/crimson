{"version":3,"file":"Menu.stories-d41b647d.js","sources":["../../src/components/Menu/MenuContext.tsx","../../src/components/Menu/Menu.tsx","../../src/components/Menu/MenuItem.tsx"],"sourcesContent":["import React from 'react';\n\nexport const MenuContext = React.createContext<{\n  getItemProps: (\n    userProps?: React.HTMLProps<HTMLElement>,\n  ) => Record<string, unknown>;\n  activeIndex: number | null;\n  setActiveIndex: React.Dispatch<React.SetStateAction<number | null>>;\n  setHasFocusInside: React.Dispatch<React.SetStateAction<boolean>>;\n  isOpen: boolean;\n}>({\n  getItemProps: () => ({}),\n  activeIndex: null,\n  setActiveIndex: () => {},\n  setHasFocusInside: () => {},\n  isOpen: false,\n});\n","import styled from '@emotion/styled';\nimport {\n  autoUpdate,\n  flip,\n  FloatingFocusManager,\n  FloatingList,\n  FloatingNode,\n  FloatingPortal,\n  FloatingTree,\n  offset,\n  safePolygon,\n  shift,\n  useClick,\n  useDismiss,\n  useFloating,\n  useFloatingNodeId,\n  useFloatingParentNodeId,\n  useFloatingTree,\n  useHover,\n  useInteractions,\n  useListItem,\n  useListNavigation,\n  useMergeRefs,\n  useRole,\n  useTypeahead,\n} from '@floating-ui/react';\nimport React from 'react';\nimport { MenuContext } from './MenuContext';\n\ninterface MenuProps {\n  label: string;\n  nested?: boolean;\n  children?: React.ReactNode;\n}\n\nconst MenuContainer = styled.div`\n  background: rgba(255, 255, 255, 0.8);\n  -webkit-backdrop-filter: blur(10px);\n  backdrop-filter: blur(10px);\n  padding: 4px;\n  border-radius: 6px;\n  box-shadow:\n    2px 4px 12px rgba(0, 0, 0, 0.1),\n    0 0 0 1px rgba(0, 0, 0, 0.1);\n  outline: 0;\n`;\n\nconst StyledButton = styled.button`\n  &.RootMenu {\n    padding: 6px 14px;\n    border: none;\n    font-size: 16px;\n    background: none;\n    border-radius: 6px;\n    border: 1px solid #d7dce5;\n  }\n\n  &.RootMenu[data-open],\n  &.RootMenu:hover {\n    background: #d7dce5;\n  }\n\n  &.MenuItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: none;\n    width: 100%;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    text-align: left;\n    line-height: 1.8;\n    min-width: 110px;\n    margin: 0;\n    outline: 0;\n  }\n\n  &.MenuItem:focus {\n    background: royalblue;\n    color: white;\n  }\n\n  .&MenuItem[data-nested][data-open]:not([data-focus-inside]) {\n    background: royalblue;\n    color: white;\n  }\n\n  &.MenuItem[data-focus-inside][data-open] {\n    background: #d7dce5;\n  }\n`;\n\nexport const MenuComponent = React.forwardRef<\n  HTMLButtonElement,\n  MenuProps & React.HTMLProps<HTMLButtonElement>\n>(({ children, label, ...props }, forwardedRef) => {\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [hasFocusInside, setHasFocusInside] = React.useState(false);\n  const [activeIndex, setActiveIndex] = React.useState<number | null>(null);\n\n  const elementsRef = React.useRef<Array<HTMLButtonElement | null>>([]);\n  const labelsRef = React.useRef<Array<string | null>>([]);\n  const parent = React.useContext(MenuContext);\n\n  const tree = useFloatingTree();\n  const nodeId = useFloatingNodeId();\n  const parentId = useFloatingParentNodeId();\n  const item = useListItem();\n\n  const isNested = parentId != null;\n\n  const { floatingStyles, refs, context } = useFloating<HTMLButtonElement>({\n    nodeId,\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    placement: isNested ? 'right-start' : 'bottom-start',\n    middleware: [\n      offset({ mainAxis: isNested ? 0 : 4, alignmentAxis: isNested ? -4 : 0 }),\n      flip(),\n      shift(),\n    ],\n    whileElementsMounted: autoUpdate,\n  });\n\n  const hover = useHover(context, {\n    enabled: isNested,\n    delay: { open: 75 },\n    handleClose: safePolygon({ blockPointerEvents: true }),\n  });\n  const click = useClick(context, {\n    event: 'mousedown',\n    toggle: !isNested,\n    ignoreMouse: isNested,\n  });\n  const role = useRole(context, { role: 'menu' });\n  const dismiss = useDismiss(context, { bubbles: true });\n  const listNavigation = useListNavigation(context, {\n    listRef: elementsRef,\n    activeIndex,\n    nested: isNested,\n    onNavigate: setActiveIndex,\n  });\n  const typeahead = useTypeahead(context, {\n    listRef: labelsRef,\n    onMatch: isOpen ? setActiveIndex : undefined,\n    activeIndex,\n  });\n\n  const { getReferenceProps, getFloatingProps, getItemProps } = useInteractions(\n    [hover, click, role, dismiss, listNavigation, typeahead],\n  );\n\n  // Event emitter allows you to communicate across tree components.\n  // This effect closes all menus when an item gets clicked anywhere\n  // in the tree.\n  React.useEffect(() => {\n    if (!tree) return;\n\n    function handleTreeClick() {\n      setIsOpen(false);\n    }\n\n    function onSubMenuOpen(event: { nodeId: string; parentId: string }) {\n      if (event.nodeId !== nodeId && event.parentId === parentId) {\n        setIsOpen(false);\n      }\n    }\n\n    tree.events.on('click', handleTreeClick);\n    tree.events.on('menuopen', onSubMenuOpen);\n\n    return () => {\n      tree.events.off('click', handleTreeClick);\n      tree.events.off('menuopen', onSubMenuOpen);\n    };\n  }, [tree, nodeId, parentId]);\n\n  React.useEffect(() => {\n    if (isOpen && tree) {\n      tree.events.emit('menuopen', { parentId, nodeId });\n    }\n  }, [tree, isOpen, nodeId, parentId]);\n\n  return (\n    <FloatingNode id={nodeId}>\n      <StyledButton\n        ref={useMergeRefs([refs.setReference, item.ref, forwardedRef])}\n        tabIndex={\n          !isNested ? undefined : parent.activeIndex === item.index ? 0 : -1\n        }\n        role={isNested ? 'menuitem' : undefined}\n        data-open={isOpen ? '' : undefined}\n        data-nested={isNested ? '' : undefined}\n        data-focus-inside={hasFocusInside ? '' : undefined}\n        className={isNested ? 'MenuItem' : 'RootMenu'}\n        {...getReferenceProps(\n          parent.getItemProps({\n            ...props,\n            onFocus(event: React.FocusEvent<HTMLButtonElement>) {\n              props.onFocus?.(event);\n              setHasFocusInside(false);\n              parent.setHasFocusInside(true);\n            },\n          }),\n        )}\n      >\n        {label}\n        {isNested && (\n          <span aria-hidden style={{ marginLeft: 10, fontSize: 10 }}>\n            â–¶\n          </span>\n        )}\n      </StyledButton>\n      <MenuContext.Provider\n        value={{\n          activeIndex,\n          setActiveIndex,\n          getItemProps,\n          setHasFocusInside,\n          isOpen,\n        }}\n      >\n        <FloatingList elementsRef={elementsRef} labelsRef={labelsRef}>\n          {isOpen && (\n            <FloatingPortal>\n              <FloatingFocusManager\n                context={context}\n                modal={false}\n                initialFocus={isNested ? -1 : 0}\n                returnFocus={!isNested}\n              >\n                <MenuContainer\n                  ref={refs.setFloating}\n                  className='Menu'\n                  style={floatingStyles}\n                  {...getFloatingProps()}\n                >\n                  {children}\n                </MenuContainer>\n              </FloatingFocusManager>\n            </FloatingPortal>\n          )}\n        </FloatingList>\n      </MenuContext.Provider>\n    </FloatingNode>\n  );\n});\n\nexport const Menu = React.forwardRef<\n  HTMLButtonElement,\n  MenuProps & React.HTMLProps<HTMLButtonElement>\n>((props, ref) => {\n  const parentId = useFloatingParentNodeId();\n\n  if (parentId === null) {\n    return (\n      <FloatingTree>\n        <MenuComponent {...props} ref={ref} />\n      </FloatingTree>\n    );\n  }\n\n  return <MenuComponent {...props} ref={ref} />;\n});\n","import React from 'react';\n\nimport styled from '@emotion/styled';\nimport { MenuContext } from './MenuContext';\nimport { useFloatingTree, useListItem, useMergeRefs } from '@floating-ui/react';\n\nconst StyledButton = styled.button`\n  &.RootMenu {\n    padding: 6px 14px;\n    border: none;\n    font-size: 16px;\n    background: none;\n    border-radius: 6px;\n    border: 1px solid #d7dce5;\n  }\n\n  &.RootMenu[data-open],\n  &.RootMenu:hover {\n    background: #d7dce5;\n  }\n\n  &.MenuItem {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: none;\n    width: 100%;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    text-align: left;\n    line-height: 1.8;\n    min-width: 110px;\n    margin: 0;\n    outline: 0;\n  }\n\n  &.MenuItem:focus {\n    background: royalblue;\n    color: white;\n  }\n\n  .&MenuItem[data-nested][data-open]:not([data-focus-inside]) {\n    background: royalblue;\n    color: white;\n  }\n\n  &.MenuItem[data-focus-inside][data-open] {\n    background: #d7dce5;\n  }\n`;\n\ninterface MenuItemProps {\n  label: string;\n  disabled?: boolean;\n}\n\nexport const MenuItem = React.forwardRef<\n  HTMLButtonElement,\n  MenuItemProps & React.ButtonHTMLAttributes<HTMLButtonElement>\n>(({ label, disabled, ...props }, forwardedRef) => {\n  const menu = React.useContext(MenuContext);\n  const item = useListItem({ label: disabled ? null : label });\n  const tree = useFloatingTree();\n  const isActive = item.index === menu.activeIndex;\n\n  return (\n    <StyledButton\n      {...props}\n      ref={useMergeRefs([item.ref, forwardedRef])}\n      type='button'\n      role='menuitem'\n      className='MenuItem'\n      tabIndex={isActive ? 0 : -1}\n      disabled={disabled}\n      {...menu.getItemProps({\n        onClick(event: React.MouseEvent<HTMLButtonElement>) {\n          props.onClick?.(event);\n          tree?.events.emit('click');\n        },\n        onFocus(event: React.FocusEvent<HTMLButtonElement>) {\n          props.onFocus?.(event);\n          menu.setHasFocusInside(true);\n        },\n      })}\n    >\n      {label}\n    </StyledButton>\n  );\n});\n"],"names":["MenuContext","React","createContext","getItemProps","activeIndex","setActiveIndex","setHasFocusInside","isOpen","MenuContainer","_styled","StyledButton","MenuComponent","children","label","forwardedRef","setIsOpen","hasFocusInside","elementsRef","labelsRef","parent","tree","useFloatingTree","nodeId","useFloatingNodeId","parentId","useFloatingParentNodeId","item","useListItem","isNested","floatingStyles","refs","context","offset","flip","shift","autoUpdate","hover","useHover","safePolygon","click","useClick","role","useRole","dismiss","useDismiss","listNavigation","useListNavigation","typeahead","useTypeahead","undefined","getReferenceProps","getFloatingProps","handleTreeClick","onSubMenuOpen","event","jsxs","FloatingNode","useMergeRefs","props","jsx","Menu","ref","FloatingTree","MenuItem","disabled","menu","isActive"],"mappings":"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"}