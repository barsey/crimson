{"version":3,"file":"ParticleProvider-f53f28ae.js","sources":["../../src/components/Alert/Alert.tsx","../../src/utils/colorUtils.ts","../../src/theming/theme.ts","../../src/core/ParticleContext.ts","../../src/components/Snackbar/Snackbar.tsx","../../src/components/Snackbar/SnackbarContainer.tsx","../../src/components/Snackbar/SnackbarProvider.tsx","../../src/core/ParticleProvider.tsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { PropsWithChildren, forwardRef } from 'react';\nimport { ParticleColor } from '../types';\n\nconst Container = styled.div<{\n  severity?: ParticleColor;\n  fallbackColor?: string;\n}>`\n  padding: 0;\n  margin: 0;\n  width: 300px;\n  margin: 10px;\n  position: relative;\n  background-color: ${({ severity, theme }) =>\n    severity ? theme.colors[severity] : '#313131'};\n  font-size: 0.875rem;\n  line-height: 1.43;\n  letter-spacing: 0.01071em;\n  color: ${({ theme, severity, fallbackColor }) =>\n    severity\n      ? theme.getContrastText(theme.colors[severity])\n      : fallbackColor ?? '#fff'};\n  align-items: center;\n  padding: 6px 16px;\n  border-radius: 4px;\n  box-shadow:\n    0px 3px 5px -1px rgba(0, 0, 0, 0.2),\n    0px 6px 10px 0px rgba(0, 0, 0, 0.14),\n    0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n\n  .content {\n    display: flex;\n    justify-content: space-between;\n\n    .message {\n      display: flex;\n      align-items: center;\n      padding: 8px 0;\n    }\n  }\n`;\n\ntype AlertProps = {\n  severity?: ParticleColor;\n  fallbackColor?: string;\n};\n\nconst Alert = forwardRef<HTMLDivElement, PropsWithChildren<AlertProps>>(\n  (props: PropsWithChildren<AlertProps>, ref) => {\n    const { children, severity, fallbackColor = 'black' } = props;\n\n    return (\n      <Container ref={ref} severity={severity} fallbackColor={fallbackColor}>\n        {children}\n      </Container>\n    );\n  },\n);\n\nexport { Alert };\n","import { ButtonVariants, ParticleColor } from '../components/types';\nimport { ParticleTheme } from '../core/theme.types';\n\nexport const contrastThreshold = 4.5;\n\nfunction hexToRgb(hex: string) {\n  const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  hex = hex.replace(shorthandRegex, function (m, r, g, b) {\n    return r + r + g + g + b + b;\n  });\n\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  return result\n    ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n      }\n    : null;\n}\n\nfunction luminance(r: number, g: number, b: number) {\n  const a = [r, g, b].map(function (v) {\n    v /= 255;\n    return v <= 0.03928 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\n  });\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\n}\n\nexport function getContrastRatio(foreground: string, background: string) {\n  const color1rgb = hexToRgb(foreground);\n  const color2rgb = hexToRgb(background);\n\n  if (!color1rgb || !color2rgb) {\n    return 0;\n  }\n\n  const color1luminance = luminance(color1rgb.r, color1rgb.g, color1rgb.b);\n  const color2luminance = luminance(color2rgb.r, color2rgb.g, color2rgb.b);\n\n  return (\n    (Math.max(color1luminance, color2luminance) + 0.05) /\n    (Math.min(color1luminance, color2luminance) + 0.05)\n  );\n}\n\nexport function getContrastText(background: string) {\n  const contrast = getContrastRatio('#ffffff', background);\n\n  const contrastText = contrast >= contrastThreshold ? '#ffffff' : '#000000';\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (contrast < 3) {\n      console.error(\n        [\n          `MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`,\n          'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n          'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast',\n        ].join('\\n'),\n      );\n    }\n  }\n\n  return contrastText;\n}\n\nexport function getButtonBackground(\n  theme: ParticleTheme,\n  color?: ParticleColor,\n  variant?: ButtonVariants,\n) {\n  switch (variant) {\n    case 'default':\n      return 'inherit';\n\n    case 'outlined':\n      return 'inherit';\n\n    case 'contained':\n      return color ? theme.colors[color] : theme.colors.primary;\n\n    case 'gradient':\n      return `linear-gradient(250deg, ${theme.colors.primary}, ${theme.colors.secondary})`;\n    default:\n      return '#fff';\n  }\n}\n\nexport function getButtonColor(\n  theme: ParticleTheme,\n  color?: ParticleColor,\n  variant?: ButtonVariants,\n) {\n  const defaultColor = color ? theme.colors[color] : theme.colors.primary;\n  switch (variant) {\n    case 'contained':\n    case 'gradient':\n      return color ? getContrastText(theme.colors[color]) : '#fff';\n    default:\n      return defaultColor;\n  }\n}\n\nexport function getButtonBorder(\n  theme: ParticleTheme,\n  color?: ParticleColor,\n  variant?: ButtonVariants,\n) {\n  const defaultColor = color ? theme.colors[color] : theme.colors.primary;\n  switch (variant) {\n    case 'outlined':\n      return `1px solid ${defaultColor}`;\n    default:\n      return '0';\n  }\n}\n","import { ParticleTheme } from '../core/theme.types';\nimport {\n  getContrastText,\n  getButtonBackground,\n  getButtonColor,\n  getButtonBorder,\n} from '../utils/colorUtils';\n\nexport const defaultTheme: ParticleTheme = {\n  colors: {\n    primary: '#7b2ff7',\n    secondary: '#9c27b0', // '#f107a3',\n    error: '#d32f2f',\n    warning: '#ed6c02',\n    info: '#0288d1',\n    success: '#2e7d32',\n  },\n  getContrastText,\n  getButtonBackground,\n  getButtonColor,\n  getButtonBorder,\n};\n","import { createContext } from 'react';\nimport { ParticleTheme } from './theme.types';\nimport { defaultTheme } from '../theming/theme';\n\nexport type ContextProps = {\n  theme: ParticleTheme;\n};\n\nconst ParticleContext = createContext<ContextProps>({\n  theme: defaultTheme,\n});\n\nexport default ParticleContext;\n","import * as React from 'react';\nimport { SharedProps, SnackbarKey } from './types';\n\nconst useEnhancedEffect =\n  typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\nexport function useEventCallback<Args extends unknown[], Return>(\n  fn: (...args: Args) => Return,\n): (...args: Args) => Return {\n  const ref = React.useRef(fn);\n  useEnhancedEffect(() => {\n    ref.current = fn;\n  });\n  return React.useCallback((...args: Args) => (0, ref.current)(...args), []);\n}\n\ninterface SnackbarProps extends Required<Pick<SharedProps, 'onClose'>> {\n  id: SnackbarKey;\n\n  children: JSX.Element;\n  autoHideDuration: number | null | undefined;\n}\n\nconst Snackbar = React.forwardRef<HTMLDivElement, SnackbarProps>(\n  (props, ref) => {\n    const {\n      children,\n\n      autoHideDuration,\n      // disableWindowBlurListener = false,\n      onClose,\n      id,\n    } = props;\n\n    const timerAutoHide = React.useRef<ReturnType<typeof setTimeout>>();\n\n    const handleClose = useEventCallback((...args: [SnackbarKey]) => {\n      if (onClose) {\n        onClose(...args);\n      }\n    });\n\n    const setAutoHideTimer = useEventCallback(\n      (autoHideDurationParam?: number | null) => {\n        if (!onClose || autoHideDurationParam == null) {\n          return;\n        }\n\n        if (timerAutoHide.current) {\n          clearTimeout(timerAutoHide.current);\n        }\n        timerAutoHide.current = setTimeout(() => {\n          handleClose(id);\n        }, autoHideDurationParam);\n      },\n    );\n\n    React.useEffect(() => {\n      setAutoHideTimer(autoHideDuration);\n\n      return () => {\n        if (timerAutoHide.current) {\n          clearTimeout(timerAutoHide.current);\n        }\n      };\n    }, [autoHideDuration, setAutoHideTimer]);\n\n    return <div ref={ref}>{children}</div>;\n  },\n);\n\nexport default Snackbar;\n","import styled from '@emotion/styled';\n\nimport { useSnackbar } from './useSnackbar';\nimport { AnimatePresence, motion } from 'framer-motion';\nimport Snackbar from './Snackbar';\nimport { CloseIcon } from '../Icons/CloseIcon';\nimport { Alert } from '../Alert/Alert';\n\nconst SnackbarContent = styled.div`\n  padding: 0;\n  margin: 0;\n  position: fixed;\n  bottom: 0;\n  right: 0;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column-reverse;\n  z-index: 1400;\n\n  button {\n    outline: none;\n    -webkit-appearance: none;\n    cursor: pointer;\n    display: flex;\n    padding: 8px 0;\n    align-items: center;\n  }\n\n  button.add {\n    position: fixed;\n    bottom: 10px;\n    left: 10px;\n    width: 60px;\n    height: 60px;\n    border-radius: 50%;\n    font-size: 28px;\n    border: none;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  button.close {\n    position: absolute;\n    top: 15px;\n    right: 10px;\n    background: inherit;\n    border: none;\n    padding: 0;\n    svg {\n      width: 1rem;\n      height: 1rem;\n      fill: #ccc;\n      &:hover {\n        fill: #fff;\n      }\n    }\n  }\n`;\n\nconst SnackbarItem = motion(Alert);\n\nconst CloseButton = ({ close }: { close: () => void }) => (\n  <button onClick={close} className='close'>\n    <CloseIcon />\n  </button>\n);\n\nexport function SnackbarContainer() {\n  const { snacks, closeSnackbar } = useSnackbar();\n  return (\n    <SnackbarContent>\n      <AnimatePresence initial={false}>\n        {snacks.map((item) => (\n          <SnackbarItem\n            layout\n            key={item.id}\n            initial={{ opacity: 0, x: 300, scale: 0.1 }}\n            animate={{ opacity: 1, x: 0, scale: 1 }}\n            exit={{\n              opacity: 0,\n              scale: 0.5,\n              transition: { duration: 0.2 },\n              x: 300,\n            }}\n            severity={item.variant}\n            fallbackColor='#fff'\n          >\n            <Snackbar\n              id={item.id}\n              autoHideDuration={item.autoHideDuration}\n              onClose={() => closeSnackbar(item.id)}\n            >\n              <div className='content'>\n                <div className='message'>{item.message}</div>\n                <CloseButton close={() => closeSnackbar(item.id)} />\n              </div>\n            </Snackbar>\n          </SnackbarItem>\n        ))}\n      </AnimatePresence>\n    </SnackbarContent>\n  );\n}\n\nexport { SnackbarContent };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { PropsWithChildren, isValidElement } from 'react';\nimport { createPortal } from 'react-dom';\nimport SnackbarContext from './SnackbarContext';\nimport {\n  InternalSnack,\n  OptionsObject,\n  SnackbarKey,\n  SnackbarMessage,\n} from './types';\nimport { SnackbarContainer } from './SnackbarContainer';\nimport { Global, css } from '@emotion/react';\n\nconst defaults = {\n  maxSnack: 3,\n  persist: false,\n  hideIconVariant: false,\n  disableWindowBlurListener: false,\n  //   variant: 'default',\n  autoHideDuration: 5000,\n  anchorOrigin: { vertical: 'bottom', horizontal: 'left' },\n};\n\nexport const isDefined = (value: string | null | undefined | number): boolean =>\n  !!value || value === 0;\n\nconst isOptions = (\n  messageOrOptions:\n    | SnackbarMessage\n    | (OptionsObject & { message?: SnackbarMessage }),\n): messageOrOptions is OptionsObject & { message?: SnackbarMessage } => {\n  const isMessage =\n    typeof messageOrOptions === 'string' || isValidElement(messageOrOptions);\n  return !isMessage;\n};\n\nexport const merge =\n  (options: any, props: any) =>\n  (name: keyof InternalSnack, shouldObjectMerge = false) => {\n    if (shouldObjectMerge) {\n      return {\n        ...(defaults as any)[name],\n        ...props[name],\n        ...options[name],\n      };\n    }\n\n    return options[name] || props[name] || (defaults as any)[name];\n  };\n\nexport const remove = (arr: InternalSnack[], item: InternalSnack) => {\n  const newArr = [...arr];\n  newArr.splice(\n    newArr.findIndex((i) => i === item),\n    1,\n  );\n  return newArr;\n};\n\nexport const add = (arr: InternalSnack[], item: InternalSnack) => {\n  return [...arr, item];\n};\n\nfunction SnackbarProvider(\n  props: PropsWithChildren<{\n    updateSnacks: (snacks: InternalSnack[]) => void;\n    snacks: InternalSnack[];\n  }>,\n) {\n  const { children, updateSnacks, snacks } = props;\n\n  const enqueueSnackbar = (\n    messageOrOptions:\n      | SnackbarMessage\n      | (OptionsObject & { message?: SnackbarMessage }),\n    optsOrUndefined: OptionsObject = {},\n  ) => {\n    if (messageOrOptions === undefined || messageOrOptions === null) {\n      throw new Error('enqueueSnackbar called with invalid argument');\n    }\n\n    const opts = isOptions(messageOrOptions)\n      ? messageOrOptions\n      : optsOrUndefined;\n\n    const message: SnackbarMessage | undefined = isOptions(messageOrOptions)\n      ? messageOrOptions.message\n      : messageOrOptions;\n\n    const { key, ...options } = opts;\n\n    const hasSpecifiedKey = isDefined(key);\n    const id = hasSpecifiedKey\n      ? (key as SnackbarKey)\n      : new Date().getTime() + Math.random();\n\n    const merger = merge(options, props);\n    const snack: InternalSnack = {\n      id,\n      ...options,\n      message,\n      persist: merger('persist'),\n      action: merger('action'),\n      content: merger('content'),\n      variant: merger('variant'),\n      anchorOrigin: merger('anchorOrigin'),\n      autoHideDuration: merger('autoHideDuration'),\n      hideIconVariant: merger('hideIconVariant'),\n      iconVariant: merger('iconVariant', true),\n      SnackbarProps: merger('SnackbarProps', true),\n    };\n\n    if (snack.persist) {\n      snack.autoHideDuration = undefined;\n    }\n\n    const updatedNotifications = add(snacks, snack);\n\n    updateSnacks(updatedNotifications);\n\n    return id;\n  };\n\n  const closeSnackbar = (key: SnackbarKey) => {\n    const shouldCloseAll = key === undefined;\n\n    const updatedNotifications = snacks\n      .filter((item) => !shouldCloseAll && item.id !== key)\n      .map((item) => ({ ...item }));\n\n    updateSnacks(updatedNotifications);\n  };\n\n  return (\n    <SnackbarContext.Provider\n      value={{ snacks, enqueueSnackbar, closeSnackbar }}\n    >\n      <Global\n        styles={css`\n          body {\n          }\n        `}\n      />\n      {children}\n      {createPortal(<SnackbarContainer />, document.body)}\n    </SnackbarContext.Provider>\n  );\n}\n\nexport { SnackbarProvider };\n","import { ThemeProvider } from '@emotion/react';\nimport { useEffect, useState } from 'react';\nimport { defaultTheme } from '../theming/theme';\nimport React from 'react';\nimport { ParticleColorTheme } from './theme.types';\nimport ParticleContext from './ParticleContext';\nimport { InternalSnack } from '../components/Snackbar/types';\n\nimport { SnackbarProvider } from '../components/Snackbar/SnackbarProvider';\n\nexport type ParticleProviderProps = {\n  children: React.ReactNode;\n  theme?: ParticleColorTheme;\n};\n\nexport default function ParticleProvider(props: ParticleProviderProps) {\n  const { children, theme } = props;\n  const [currentTheme, setCurrentTheme] = useState(defaultTheme);\n  const [notifications, setNotifications] = useState<InternalSnack[]>([]);\n\n  useEffect(() => {\n    if (theme) {\n      setCurrentTheme({ ...defaultTheme, ...theme });\n    }\n  }, [theme]);\n\n  return (\n    <ParticleContext.Provider\n      value={{\n        theme: currentTheme,\n      }}\n    >\n      <ThemeProvider theme={currentTheme}>\n        <SnackbarProvider\n          snacks={notifications}\n          updateSnacks={setNotifications}\n        >\n          {children}\n        </SnackbarProvider>\n      </ThemeProvider>\n    </ParticleContext.Provider>\n  );\n}\n"],"names":["Container","_styled","severity","theme","fallbackColor","Alert","forwardRef","props","ref","children","jsx","contrastThreshold","hexToRgb","hex","shorthandRegex","replace","m","r","g","b","result","exec","parseInt","luminance","a","map","v","Math","pow","getContrastRatio","foreground","background","color1rgb","color2rgb","color1luminance","color2luminance","max","min","getContrastText","contrastText","getButtonBackground","color","variant","colors","primary","secondary","getButtonColor","defaultColor","getButtonBorder","defaultTheme","error","warning","info","success","ParticleContext","createContext","useEnhancedEffect","React.useLayoutEffect","React.useEffect","useEventCallback","fn","React.useRef","React.useCallback","args","Snackbar","React.forwardRef","autoHideDuration","onClose","id","timerAutoHide","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","React","SnackbarContent","SnackbarItem","motion","CloseButton","close","CloseIcon","SnackbarContainer","snacks","closeSnackbar","AnimatePresence","item","jsxs","defaults","isDefined","value","isOptions","messageOrOptions","isValidElement","merge","options","name","shouldObjectMerge","add","arr","_ref","SnackbarProvider","updateSnacks","enqueueSnackbar","optsOrUndefined","opts","message","key","merger","snack","updatedNotifications","shouldCloseAll","SnackbarContext","Global","ParticleProvider","currentTheme","setCurrentTheme","useState","notifications","setNotifications","useEffect"],"mappings":"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"}