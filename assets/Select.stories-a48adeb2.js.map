{"version":3,"file":"Select.stories-a48adeb2.js","sources":["../../src/components/Icons/CloseIcon.tsx","../../src/components/Icons/UpDownIcon.tsx","../../src/components/Select/Select.tsx"],"sourcesContent":["import React from 'react';\n\nconst CloseIcon = () => (\n  <svg\n    viewBox='0 0 15 15'\n    height='15'\n    width='15'\n    aria-hidden='true'\n    focusable='false'\n  >\n    <path d='M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z'></path>\n  </svg>\n);\n\nexport { CloseIcon };\n","import React from 'react';\n\nconst UpDownIcon = () => (\n  <svg viewBox='0 0 15 15' height='20' width='20'>\n    <path\n      d='M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z'\n      aria-hidden='true'\n      focusable='false'\n    ></path>\n  </svg>\n);\n\nexport { UpDownIcon };\n","import React, { useEffect, useRef, useState, useId } from 'react';\nimport styled from '@emotion/styled';\nimport { CloseIcon } from '../Icons/CloseIcon';\nimport { UpDownIcon } from '../Icons/UpDownIcon';\nimport { DefaultParticleProps, ParticleColor } from '../types';\n\nconst SelectContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  min-width: 200px;\n  width: 100%;\n`;\n\nconst SelectControl = styled.div<{ color?: ParticleColor }>`\n  align-items: center;\n  cursor: default;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  min-height: 38px;\n  position: relative;\n  transition: all 100ms ease 0s;\n  background-color: rgb(255, 255, 255);\n  border-color: rgb(204, 204, 204);\n  border-radius: 4px;\n  border-style: solid;\n  border-width: 1px;\n  box-sizing: border-box;\n  outline: 0px !important;\n  &:focus,\n  &.menu-visible {\n    border-color: ${({ theme, color }) =>\n      color ? theme.colors[color] : theme.colors.primary};\n    // box-shadow: rgb(38, 132, 255) 0px 0px 0px 1px;\n  }\n`;\n\nconst SelectValueContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-wrap: wrap;\n  position: relative;\n  overflow: hidden;\n  padding: 2px 8px;\n  box-sizing: border-box;\n`;\n\nconst SelectIndicators = styled.div`\n  align-items: center;\n  align-self: stretch;\n  display: flex;\n  flex-shrink: 0;\n  box-sizing: border-box;\n`;\n\nconst SelectIndicator = styled.div`\n  display: flex;\n  transition: color 150ms ease 0s;\n  color: rgb(204, 204, 204);\n  padding: 6px;\n  box-sizing: border-box;\n\n  display: inline-block;\n  fill: currentcolor;\n  line-height: 1;\n  stroke: currentcolor;\n  stroke-width: 0;\n\n  svg {\n    &:hover {\n      fill: rgb(102, 102, 102);\n      stroke: rgb(102, 102, 102);\n    }\n  }\n`;\n\nconst SelectInput = styled.div`\n  padding: 4px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  user-select: none;\n`;\n\nconst SelectMenu = styled.div`\n  position: absolute;\n  transform: translateY(100px);\n  width: 100%;\n\n  border-radius: 5px;\n  overflow: auto;\n  max-height: 150px;\n  background-color: #fff;\n\n  box-shadow:\n    0 0 0 1px hsla(0, 0%, 0%, 0.1),\n    0 4px 11px hsla(0, 0%, 0%, 0.1);\n\n  .select-menu-item {\n    padding: 5px;\n    cursor: pointer;\n    &:hover {\n      background-color: #9fc3f870;\n    }\n\n    &.selected {\n      background-color: #0d6efd;\n      color: #fff;\n    }\n  }\n`;\n\nconst SelectInputTags = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 5px;\n`;\n\nconst SelectInputTagItem = styled.div`\n  background-color: rgb(230, 230, 230);\n  padding: 2px 4px;\n  border-radius: 2px;\n  display: flex;\n  align-items: center;\n\n  svg {\n    fill: rgb(102, 102, 102);\n    stroke: rgb(102, 102, 102);\n  }\n`;\n\nconst TagLabel = styled.div`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  border-radius: 2px;\n  color: rgb(51, 51, 51);\n  font-size: 85%;\n  box-sizing: border-box;\n  height: 18px;\n  display: flex;\n  align-items: center;\n  padding: 2px 2px;\n\n  &.single {\n    height: 24px;\n    padding: 4px 2px;\n    font-size: 100%;\n  }\n`;\n\nconst SelectCloseContainer = styled.span`\n  display: flex;\n  align-items: center;\n\n  &.multiple {\n    height: 14px;\n    width: 14px;\n    &:hover {\n      background-color: #ddd;\n    }\n  }\n`;\n\nconst SearchBox = styled.div`\n  padding: 5px;\n  background-color: #eee;\n\n  input {\n    width: 100%;\n    box-sizing: border-box;\n    padding: 5px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n  }\n`;\n\nconst IconSeparator = styled.span`\n  align-self: stretch;\n  width: 1px;\n  background-color: rgb(204, 204, 204);\n  margin-bottom: 8px;\n  margin-top: 8px;\n  box-sizing: border-box;\n`;\n\nconst SelectInputContent = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\ntype SelectKeyValue = { [key: string]: string };\n\ntype SelectProps = DefaultParticleProps & {\n  placeholder?: string;\n  options: SelectKeyValue[];\n  valueKey: string;\n  labelKey: string;\n  onChange?: Function;\n  value?: SelectKeyValue;\n  multiple?: boolean;\n  searchable?: boolean;\n  label?: string;\n};\n\nconst Select: React.FC<SelectProps> = (props) => {\n  const {\n    placeholder,\n    options,\n    valueKey,\n    labelKey,\n    multiple,\n    searchable,\n    onChange,\n    value,\n    label,\n  } = props;\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState<SelectKeyValue[]>([]);\n  const [searchValue, setSearchValue] = useState('');\n  const searchRef = useRef<HTMLInputElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const controlId = useId();\n\n  useEffect(() => {\n    const handler = (event: any) => {\n      if (inputRef.current && !inputRef.current.contains(event.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    window.addEventListener('click', handler);\n\n    return () => {\n      window.removeEventListener('click', handler);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (value) {\n      setSelectedValue([value]);\n    }\n  }, [value]);\n\n  useEffect(() => {\n    setSearchValue('');\n    if (showMenu && searchRef.current) {\n      searchRef.current.focus();\n    }\n  }, [showMenu]);\n\n  const handleInputClick = (event: React.MouseEvent<HTMLElement>) => {\n    setShowMenu(!showMenu);\n  };\n\n  const getDisplay = () => {\n    if (!selectedValue || selectedValue.length === 0) {\n      return <TagLabel className='single'>{placeholder}</TagLabel>;\n    }\n\n    if (multiple) {\n      return (\n        <SelectInputTags>\n          {selectedValue.map((option) => (\n            <SelectInputTagItem key={option[valueKey]}>\n              <TagLabel>{option[labelKey]}</TagLabel>\n              <SelectCloseContainer\n                className='multiple'\n                onClick={(e) => onTagRemove(e, option)}\n              >\n                <CloseIcon />\n              </SelectCloseContainer>\n            </SelectInputTagItem>\n          ))}\n        </SelectInputTags>\n      );\n    }\n\n    return <TagLabel className='single'>{selectedValue[0][labelKey]}</TagLabel>;\n  };\n\n  const onChangeHandler = (newValue: SelectKeyValue[]) => {\n    onChange &&\n      onChange(\n        multiple ? newValue : newValue.length === 1 ? newValue[0] : null,\n      );\n  };\n\n  const onItemSelect = (option: SelectKeyValue) => {\n    let newValue;\n    if (multiple) {\n      if (\n        selectedValue.findIndex((o) => o[valueKey] === option[valueKey]) >= 0\n      ) {\n        newValue = removeOption(option);\n      } else {\n        newValue = [...selectedValue, option];\n      }\n    } else {\n      newValue = [option];\n    }\n\n    setSelectedValue(newValue);\n    onChangeHandler(newValue);\n  };\n\n  const isSelected = (option: SelectKeyValue) => {\n    if (multiple) {\n      return (\n        selectedValue.filter((o) => o[valueKey] === option[valueKey]).length > 0\n      );\n    }\n\n    if (selectedValue.length === 0) {\n      return false;\n    }\n\n    return selectedValue[0][valueKey] === option[valueKey];\n  };\n\n  const removeOption = (option: SelectKeyValue) => {\n    return selectedValue.filter((o) => o[valueKey] !== option[valueKey]);\n  };\n\n  const onTagRemove = (\n    event: React.MouseEvent<HTMLElement>,\n    option: SelectKeyValue,\n  ) => {\n    event.stopPropagation();\n    const newValue = removeOption(option);\n    setSelectedValue(newValue);\n    onChangeHandler(newValue);\n  };\n\n  const onClearSelected = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation();\n    setSelectedValue([]);\n    onChangeHandler([]);\n  };\n\n  const onSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchValue(e.target.value);\n  };\n  const getOptions = () => {\n    if (!searchValue) {\n      return options;\n    }\n    return options.filter(\n      (option) =>\n        option[labelKey].toLowerCase().indexOf(searchValue.toLowerCase()) >= 0,\n    );\n  };\n\n  return (\n    <SelectContainer>\n      {label && <label>{label}</label>}\n      <SelectControl\n        tabIndex={-1}\n        ref={inputRef}\n        onClick={handleInputClick}\n        className={`${showMenu && 'menu-visible'}`}\n        role='button'\n      >\n        <SelectValueContainer>\n          <SelectInput>\n            <SelectInputContent>{getDisplay()}</SelectInputContent>\n          </SelectInput>\n        </SelectValueContainer>\n        {showMenu && (\n          <SelectMenu>\n            {searchable && (\n              <SearchBox>\n                <input\n                  onChange={onSearch}\n                  value={searchValue}\n                  ref={searchRef}\n                />\n              </SearchBox>\n            )}\n            {getOptions().map((option: SelectKeyValue) => (\n              <div\n                onClick={() => onItemSelect(option)}\n                key={option[valueKey]}\n                className={`select-menu-item ${\n                  isSelected(option) && 'selected'\n                }`}\n              >\n                {option[labelKey]}\n              </div>\n            ))}\n          </SelectMenu>\n        )}\n        <SelectIndicators>\n          <SelectIndicator>\n            {!multiple && selectedValue.length > 0 && (\n              <SelectCloseContainer\n                onClick={onClearSelected}\n                role='button'\n                aria-hidden='true'\n              >\n                <CloseIcon />\n              </SelectCloseContainer>\n            )}\n          </SelectIndicator>\n          <IconSeparator />\n          <SelectIndicator>\n            <UpDownIcon />\n          </SelectIndicator>\n        </SelectIndicators>\n      </SelectControl>\n    </SelectContainer>\n  );\n};\n\nexport { Select };\n"],"names":["CloseIcon","jsx","UpDownIcon","SelectContainer","_styled","SelectControl","theme","color","SelectValueContainer","SelectIndicators","SelectIndicator","SelectInput","SelectMenu","SelectInputTags","SelectInputTagItem","TagLabel","SelectCloseContainer","SearchBox","IconSeparator","SelectInputContent","Select","props","placeholder","options","valueKey","labelKey","multiple","searchable","onChange","value","label","showMenu","setShowMenu","useState","selectedValue","setSelectedValue","searchValue","setSearchValue","searchRef","useRef","inputRef","useId","useEffect","handler","event","window","handleInputClick","getDisplay","option","jsxs","e","onTagRemove","onChangeHandler","newValue","onItemSelect","o","isSelected","removeOption","onClearSelected","onSearch","getOptions"],"mappings":"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"}