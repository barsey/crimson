{"version":3,"file":"Popover-86ade731.js","sources":["../../src/components/Popover/Popover.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  flip,\n  shift,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  useMergeRefs,\n  Placement,\n  FloatingPortal,\n  FloatingFocusManager,\n  useId,\n} from '@floating-ui/react';\nimport styled from '@emotion/styled';\nimport { Button } from '../Button';\nimport { DefaultParticleProps } from '../types';\n\nconst PopoverContentElement = styled.div`\n  background-color: white;\n  box-shadow:\n    rgba(0, 0, 0, 0.05) 0px 1px 3px 0px,\n    rgba(0, 0, 0, 0.05) 0px 20px 25px -5px,\n    rgba(0, 0, 0, 0.04) 0px 10px 10px -5px;\n  border: 1px solid rgb(233, 236, 239);\n  font-size: 90%;\n  padding: 4px 8px;\n  border-radius: 4px;\n  box-sizing: border-box;\n  width: max-content;\n  max-width: calc(100vw - 10px);\n`;\n\ninterface PopoverOptions {\n  initialOpen?: boolean;\n  placement?: Placement;\n  modal?: boolean;\n  open?: boolean;\n  onOpenChange?: (open: boolean) => void;\n}\n\nexport function usePopover({\n  initialOpen = false,\n  placement = 'bottom',\n  modal,\n  open: controlledOpen,\n  onOpenChange: setControlledOpen,\n}: PopoverOptions = {}) {\n  const [uncontrolledOpen, setUncontrolledOpen] = React.useState(initialOpen);\n  const [labelId, setLabelId] = React.useState<string | undefined>();\n  const [descriptionId, setDescriptionId] = React.useState<\n    string | undefined\n  >();\n\n  const open = controlledOpen ?? uncontrolledOpen;\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\n\n  const data = useFloating({\n    placement,\n    open,\n    onOpenChange: setOpen,\n    whileElementsMounted: autoUpdate,\n    middleware: [\n      offset(5),\n      flip({\n        crossAxis: placement.includes('-'),\n        fallbackAxisSideDirection: 'end',\n        padding: 5,\n      }),\n      shift({ padding: 5 }),\n    ],\n  });\n\n  const context = data.context;\n\n  const click = useClick(context, {\n    enabled: controlledOpen == null,\n  });\n  const dismiss = useDismiss(context);\n  const role = useRole(context);\n\n  const interactions = useInteractions([click, dismiss, role]);\n\n  return React.useMemo(\n    () => ({\n      open,\n      setOpen,\n      ...interactions,\n      ...data,\n      modal,\n      labelId,\n      descriptionId,\n      setLabelId,\n      setDescriptionId,\n    }),\n    [open, setOpen, interactions, data, modal, labelId, descriptionId],\n  );\n}\n\ntype ContextType =\n  | (ReturnType<typeof usePopover> & {\n      setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n      setDescriptionId: React.Dispatch<\n        React.SetStateAction<string | undefined>\n      >;\n    })\n  | null;\n\nconst PopoverContext = React.createContext<ContextType>(null);\n\nexport const usePopoverContext = () => {\n  const context = React.useContext(PopoverContext);\n\n  if (context == null) {\n    throw new Error('Popover components must be wrapped in <Popover />');\n  }\n\n  return context;\n};\n\nexport function Popover({\n  children,\n  modal = false,\n  ...restOptions\n}: {\n  children: React.ReactNode;\n} & PopoverOptions) {\n  // This can accept any props as options, e.g. `placement`,\n  // or other positioning options.\n  const popover = usePopover({ modal, ...restOptions });\n  return (\n    <PopoverContext.Provider value={popover}>\n      {children}\n    </PopoverContext.Provider>\n  );\n}\n\ninterface PopoverTriggerProps extends DefaultParticleProps {\n  children: React.ReactNode;\n  asChild?: boolean;\n}\n\nexport const PopoverTrigger = React.forwardRef<\n  HTMLElement,\n  React.HTMLProps<HTMLElement> & PopoverTriggerProps\n>(function PopoverTrigger({ children, asChild = false, ...props }, propRef) {\n  const context = usePopoverContext();\n  const childrenRef = (children as any).ref; // eslint-disable-line\n  const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);\n\n  // `asChild` allows the user to pass any element as the anchor\n  if (asChild && React.isValidElement(children)) {\n    return React.cloneElement(\n      children,\n      context.getReferenceProps({\n        ref,\n        ...props,\n        ...children.props,\n        'data-state': context.open ? 'open' : 'closed',\n      }),\n    );\n  }\n\n  return (\n    <Button\n      disableElevation\n      variant='contained'\n      ref={ref}\n      // The user can style the trigger based on the state\n      data-state={context.open ? 'open' : 'closed'}\n      {...context.getReferenceProps(props)}\n    >\n      {children}\n    </Button>\n  );\n});\n\nexport const PopoverContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLProps<HTMLDivElement>\n>(function PopoverContent({ style, ...props }, propRef) {\n  const { context: floatingContext, ...context } = usePopoverContext();\n  const ref = useMergeRefs([context.refs.setFloating, propRef]);\n\n  if (!floatingContext.open) return null;\n\n  return (\n    <FloatingPortal>\n      <FloatingFocusManager context={floatingContext} modal={context.modal}>\n        <PopoverContentElement\n          ref={ref}\n          style={{ ...context.floatingStyles, ...style }}\n          aria-labelledby={context.labelId}\n          aria-describedby={context.descriptionId}\n          {...context.getFloatingProps(props)}\n        >\n          {props.children}\n        </PopoverContentElement>\n      </FloatingFocusManager>\n    </FloatingPortal>\n  );\n});\n\nexport const PopoverHeading = React.forwardRef<\n  HTMLHeadingElement,\n  React.HTMLProps<HTMLHeadingElement>\n>(function PopoverHeading(props, ref) {\n  const { setLabelId } = usePopoverContext();\n  const id = useId();\n\n  // Only sets `aria-labelledby` on the Popover root element\n  // if this component is mounted inside it.\n  React.useLayoutEffect(() => {\n    setLabelId(id);\n    return () => setLabelId(undefined);\n  }, [id, setLabelId]);\n\n  return (\n    <h2 {...props} ref={ref} id={id}>\n      {props.children}\n    </h2>\n  );\n});\n\nexport const PopoverDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLProps<HTMLParagraphElement>\n>(function PopoverDescription(props, ref) {\n  const { setDescriptionId } = usePopoverContext();\n  const id = useId();\n\n  // Only sets `aria-describedby` on the Popover root element\n  // if this component is mounted inside it.\n  React.useLayoutEffect(() => {\n    setDescriptionId(id);\n    return () => setDescriptionId(undefined);\n  }, [id, setDescriptionId]);\n\n  return <p {...props} ref={ref} id={id} />;\n});\n\nexport const PopoverClose = React.forwardRef<\n  HTMLButtonElement,\n  React.ButtonHTMLAttributes<HTMLButtonElement>\n>(function PopoverClose(props, ref) {\n  const { setOpen } = usePopoverContext();\n  return (\n    <button\n      type='button'\n      ref={ref}\n      {...props}\n      onClick={(event) => {\n        props.onClick?.(event);\n        setOpen(false);\n      }}\n    />\n  );\n});\n"],"names":["PopoverContentElement","_styled","usePopover","initialOpen","placement","modal","controlledOpen","uncontrolledOpen","setUncontrolledOpen","React.useState","labelId","setLabelId","descriptionId","setDescriptionId","open","setOpen","setControlledOpen","data","useFloating","autoUpdate","shift","context","click","useClick","dismiss","useDismiss","role","useRole","interactions","useInteractions","React.useMemo","PopoverContext","React.createContext","usePopoverContext","React.useContext","Popover","children","restOptions","popover","jsx","PopoverTrigger","React.forwardRef","props","propRef","childrenRef","ref","useMergeRefs","asChild","React.isValidElement","React.cloneElement","Button","PopoverContent","style","floatingContext","FloatingPortal","FloatingFocusManager","floatingStyles","PopoverHeading","id","useId","React","PopoverDescription","PopoverClose","event"],"mappings":"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"}