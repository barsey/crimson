name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  lint_build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4

      - name: Notify build started
        id: initial_message
        uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}

      - uses: ./.github/actions/install-dependencies

      - name: Validate PR Title
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"

          echo "$PR_TITLE" | npx commitlint

      - uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          message: 'PR Title check is successful :tada:'
          thread_ts: ${{ steps.initial_message.outputs.thread_ts }}

      - name: Run Prettier check
        run: npx prettier . --check

      - uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          message: 'Prettier check is successful :tada:'
          thread_ts: ${{ steps.initial_message.outputs.thread_ts }}

      - name: Linting
        run: yarn lint

      - uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          message: 'Lint check is successful :tada:'
          thread_ts: ${{ steps.initial_message.outputs.thread_ts }}

      - name: Tests
        run: yarn test:coverage

      - uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          message: 'Test run is successful :tada:'
          thread_ts: ${{ steps.initial_message.outputs.thread_ts }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          flags: unittests
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: Build
        run: yarn build

      - name: Build storybook
        run: yarn build-storybook

      - uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          message: 'Generating assets is successful :tada:'
          thread_ts: ${{ steps.initial_message.outputs.thread_ts }}

      - name: Notify build status
        id: final_message
        if: always()
        uses: ./.github/actions/slack-notify
        with:
          channel_id: ${{ secrets.SLACK_CHANNEL_ID }}
          slack_bot_token: ${{ secrets.SLACK_BOT_TOKEN }}
          status: ${{job.status}}
          update_ts: ${{ steps.initial_message.outputs.ts }}
